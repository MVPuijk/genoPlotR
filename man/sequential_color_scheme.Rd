% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/color_schemes.R
\name{sequential_color_scheme}
\alias{sequential_color_scheme}
\title{Apply a sequential color scheme to dna_segs and comparisons}
\usage{
sequential_color_scheme(
  dna_segs,
  comparisons,
  seg_id = "locus_id",
  comparison_id = "auto",
  color_var = "fill",
  default_color = "grey80",
  both_directions = TRUE
)
}
\arguments{
\item{dna_segs}{A list of \code{dna_seg} objects.}

\item{comparisons}{A list of \code{comparison} objects.}

\item{seg_id}{The name of a \code{dna_seg} column, whose values will be used to
make the links to the \code{comparisons}.}

\item{comparison_id}{The shared name of the \code{comparison} columns, whose
values will be used to make the links to the \code{dna_segs}. See details.}

\item{color_var}{A character string denoting which color attribute to update
for the \code{dna_segs}, one of: \code{"fill"}, \code{"col"}.}

\item{default_color}{A character string providing a default color, must be
either \code{NULL} or a valid color. The color given by this argument will be
ignored when updating, never overwriting any other color.}

\item{both_directions}{Logical. If \code{FALSE}, the color scheme will be applied
sequentially in plotting order, starting from the first \code{dna_seg}. When
\code{both_directions} is \code{TRUE}, it will then additionally update each \code{dna_seg}
and \code{comparison} in reverse plotting order.}
}
\value{
A list with 2 named elements: \code{dna_segs} and \code{comparisons}, which
are both lists containing the \code{dna_seg} and \code{comparison} objects,
respectively.
}
\description{
Generates and applies a sequential color scheme to a list of \code{dna_seg} and
\code{comparison} objects. It does this by taking the colors that are already
there and transferring those over to any features connected to it through
the comparisons. For example, if a feature from a single \code{dna_seg} has red
as its \code{fill} attribute, the comparisons that can be linked to this feature
will become red as well. This is then followed up by updating any \code{dna_seg}
features linked to those comparisons, and so on.
}
\details{
The existing colors from the input \code{dna_seg} and
\code{comparison} objects are transferred over to the next object in the
plotting order, with the exception of their default colors, provided by
\code{default_color}. As \code{comparison} objects only have a single color
attribute \code{col}, those will be updated using the column provided by
\code{color_var} from the \code{dna_segs}, while the \code{dna_segs} themselves will be
updated using the \code{col} column from the comparisons regardless of
\code{color_var}.

The objects are linked together through shared
values. The columns for these shared values are determined by the \code{seg_id}
and \code{comparison_id} arguments, for the \code{dna_segs} and \code{comparisons},
respectively. \code{comparison_id} refers to 2 columns, and defaults to \code{"auto"},
which will attempt to determine which columns to use automatically.
If for example, \code{comparison_id} is set as \code{"name"}, it will look for the
\code{"name1"} and \code{"name2"} columns to match to the \code{seg_id} in the \code{dna_segs}
above, and under it, respectively.
}
\examples{
## Prepare dna_seg
names1 <- c("1A", "1B", "1C")
names2 <- c("2A", "2C", "2B")
names3 <- c("3B", "3A", "3C")

## Make dna_segs with some alternate colors
dna_seg1 <- dna_seg(data.frame(name = names1,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3),
                               fill = c("darkred", "grey80", "darkblue")))
dna_seg2 <- dna_seg(data.frame(name = names2,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3),
                               fill = c("grey80", "grey80", "darkgreen")))
dna_seg3 <- dna_seg(data.frame(name = names3,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3)))

## Make comparisons
comp1 <- comparison(data.frame(start1 = c(3, 6, 9), end1 = c(5, 8, 11),
                               start2 = c(3, 9, 6), end2 = c(5, 11, 8),
                               name1 = c("1A", "1B", "1C"), 
                               name2 = c("2A", "2B", "2C"),
                               direction = c(1, 1, 1)))
comp2 <- comparison(data.frame(start1 = c(3, 9, 6), end1 = c(5, 11, 8),
                               start2 = c(6, 3, 9), end2 = c(8, 5, 11),
                               name1 = c("2A", "2B", "2C"), 
                               name2 = c("3A", "3B", "3C"),
                               direction = c(1, 1, 1)))

## Before adding a color scheme
plot_gene_map(dna_segs = list(dna_seg1, dna_seg2, dna_seg3), 
              comparisons = list(comp1, comp2),
              alpha_comparisons = 0.6)

## Sequential color scheme without going both directions
full_data <- sequential_color_scheme(list(dna_seg1, dna_seg2, dna_seg3),
                                     comparisons = list(comp1, comp2),
                                     seg_id = "name",
                                     both_directions = FALSE)
plot_gene_map(dna_segs = full_data$dna_segs, 
              comparisons = full_data$comparisons,
              alpha_comparisons = 0.6)

## Sequential color scheme with both directions
full_data <- sequential_color_scheme(list(dna_seg1, dna_seg2, dna_seg3),
                                     comparisons = list(comp1, comp2),
                                     seg_id = "name")
plot_gene_map(dna_segs = full_data$dna_segs, 
              comparisons = full_data$comparisons,
              alpha_comparisons = 0.6)

}
\seealso{
\link{gradient_color_scheme}, \link{uniform_color_scheme}, \link{plot_gene_map},
\link{dna_seg}, \link{comparison}
}
\author{
Mike Puijk
}
