% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparison.R
\name{comparison}
\alias{comparison}
\alias{as.comparison}
\alias{is.comparison}
\title{comparison class and methods}
\usage{
comparison(x)

as.comparison(df)

is.comparison(comparison)
}
\arguments{
\item{x}{An object to be coerced. Can be a \code{list}, \code{data.frame} or
\code{data.table} object. See details for necessary columns.}

\item{df}{Same as \code{x}.}

\item{comparison}{An object to test.}
}
\value{
\code{as.comparison} and \code{comparison} both return a
\code{comparison} object.

\code{is.comparison} returns a logical.
}
\description{
\code{comparison} objects are collections of similarities between two DNA
segments. These functions are class functions to create, convert, and test
\code{comparison} objects.
}
\details{
A \code{comparison} object requires at least the \code{start1}, \code{end1},
\code{start2}, and \code{end2} columns. A color can be provided as well using the \code{col}
column. Additional numeric columns can be used for color-coding using
\verb{[gradient_color_scheme]}, or the \code{"gradient"} color scheme in the
\code{global_color_scheme} argument in \verb{[plot_gene_map]}.

These objects inherit from \code{data.table}, and
can therefore be manipulated using \code{data.table} syntax.

\code{is.comparison} returns \code{TRUE} if the object tested is a
\code{comparison} object.
}
\examples{
## Get some values
starts1 <- c(2, 1000, 1050)
ends1 <- c(600, 800, 1345)
starts2 <- c(50, 800, 1200)
ends2 <- c(900, 1100, 1322)

## From a data.frame
comparison1 <- as.comparison(data.frame(start1 = starts1, end1 = ends1,
                                        start2 = starts2, end2 = ends2))
print_comparison(comparison1)
is.comparison(comparison1)
is.data.frame(comparison1)
print_comparison(data.frame(start1 = starts1, end1 = ends1,
                            start2 = starts2, end2 = ends2))

## From a list
print_comparison(list(start1 = starts1, end1 = ends1,
                      start2 = starts2, end2 = ends2))


## Printing out a comparison like this can occasionally throw an error:
\dontrun{
comparison1
print(comparison1)
}
## This can happen when print.comparison is loaded from the testthat package
## To avoid this, use print_comparison as shown above

}
\seealso{
\link{read_comparison}, \link{print_comparison}, \link{trim.comparison},
\link{reverse.comparison}, \link{update_comparisons}
}
\author{
Lionel Guy
}
