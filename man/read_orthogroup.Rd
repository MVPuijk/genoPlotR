% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_comparison.R
\name{read_orthogroup}
\alias{read_orthogroup}
\alias{read_orthogroup_from_file}
\alias{read_orthogroup_from_orthomcl}
\alias{read_orthogroup_from_orthofinder}
\alias{read_orthogroup_from_mmseqs2}
\alias{read_orthogroup_from_diamond}
\title{Create comparisons between dna_segs by reading in a file of groupings}
\usage{
read_orthogroup_from_file(
  file,
  dna_segs,
  fileType,
  seg_labels = NULL,
  id_tag = "locus_id",
  group_name = "orthogroup",
  alter_dna_segs = TRUE,
  verbose = FALSE,
  ...
)

read_orthogroup_from_orthomcl(file, dna_segs, ...)

read_orthogroup_from_orthofinder(file, dna_segs, ...)

read_orthogroup_from_mmseqs2(file, dna_segs, ...)

read_orthogroup_from_diamond(file, dna_segs, ...)
}
\arguments{
\item{file}{A character string containing a file path.}

\item{dna_segs}{A list of \code{dna_seg} objects.}

\item{fileType}{A character string containing the file format to parse.
Must be one of: \code{"orthomcl"}, \code{"orthofinder"}, \code{"mmseqs2"}, or \code{"diamond"}.}

\item{seg_labels}{Only for use with \code{"orthofinder"} format files, a character
string of \code{dna_seg} labels. See details.}

\item{id_tag}{A character string with a \code{dna_seg} column. The (gene) names
taken from the (ortho)groups file will be matched to the names found in this
\code{dna_seg} column.}

\item{group_name}{A character string containing a column name. This column
will contain the group names found in the (ortho)groups file and will be
added to the \code{comparisons}, as well as the \code{dna_segs} when \code{alter_dna_segs}
is set to \code{TRUE}.}

\item{alter_dna_segs}{Logical. If \code{TRUE}, a group column will be added to
each \code{dna_seg} containing the groupings found in the (ortho)groups file.}

\item{verbose}{Logical. If \code{TRUE}, will report a warning when the column
specified by \code{group_name} is already present in the \code{dna_segs} and will
therefore be overwritten. Has no effect unless \code{alter_dna_segs} is set to
\code{TRUE}.}

\item{...}{Arguments to pass to \link{fread} and \code{read_orthogroup_from_file}.}
}
\value{
With \code{alter_dna_segs = TRUE}, a list with 2
named elements: \code{dna_segs} and \code{comparisons}, which are both lists containing
the \code{dna_seg} and \code{comparison} objects, respectively.

With \code{alter_dna_segs = FALSE}, a list of \code{comparison} objects.
}
\description{
Functions to create \code{comparisons} between \code{dna_seg} objects by parsing
(ortho)groups from a file.
}
\details{
\code{read_orthogroup_from_orthomcl}, \code{read_orthogroup_from_orthofinder},
\code{read_orthogroup_from_mmseqs2}, and \code{read_orthogroup_from_diamond} are
all just convenience functions for \code{read_orthogroup_from_file}.

This function was created to create a list of \code{comparisons} from a list of
\code{dna_segs} and a file that contains orthologous groups of genes
(orthogroups). However, it could theoretically be used for any grouping of
(genetic) elements on a genomic track. For instance, a group could represent
an operon, pathway, or general function. This function creates the
\code{comparisons} by linking together columns from \code{dna_segs} (specified by
\code{id_tag}).

Because \code{"orthofinder"} format files contain columns representing the
different genomes as input, this function will attempt to
query only the \code{dna_seg} whose label matches the column. \code{dna_seg} labels
will be determined automatically, but they can also be provided using the
\code{seg_labels} argument. If the labels cannot be matched, it will continue
without matching \code{dna_seg} names, querying each \code{dna_seg} for each column.
}
\examples{
## Generate data
names1 <- c("1_FeatA1", "1_FeatA2", "1_FeatB")
names2 <- c("2_FeatA", "2_FeatB")
names3 <- c("3_FeatA", "3_FeatB")
df1 <- data.frame(name = names1, start = c(1, 501, 1501),
                  end = c(400, 900, 2200), strand = c(1, 1, 1))
df2 <- data.frame(name = names2, start = c(1, 501),
                  end = c(400, 1200), strand = c(1, 1))
df3 <- data.frame(name = names3, start = c(1, 501),
                  end = c(400, 1200), strand = c(1, 1))

## Create list of dna_segs
dna_segs <- list(dna_seg(df1), dna_seg(df2), dna_seg(df3))

## Read feature groups from OrthoFinder (Orthogroups.tsv) format
file <- system.file('extdata/OrthoFinder_format.tsv', package = 'genoPlotR')
full_data <- read_orthogroup_from_file(file = file, dna_segs = dna_segs,
                                       fileType = "orthofinder", 
                                       id_tag = "name")

## Plot data
plot_gene_map(dna_segs = full_data$dna_segs,
              comparisons = full_data$comparisons,
              global_color_scheme = "uniform",
              alpha_comparisons = 0.5)

## Examples of these groups in the different supported formats:
OrthoFinder_file <- system.file('extdata/OrthoFinder_format.tsv',
                                package = 'genoPlotR')
OrthoMCL_file <- system.file('extdata/OrthoMCL_format.txt',
                             package = 'genoPlotR')
MMSeqs2_or_DIAMOND_file <- system.file('extdata/MMseqs2_DIAMOND_format.tsv',
                                       package = 'genoPlotR')

cat(readLines(OrthoFinder_file), sep = "\n")
cat(readLines(OrthoMCL_file), sep = "\n")
cat(readLines(MMSeqs2_or_DIAMOND_file), sep = "\n")

}
\seealso{
\link{comparison}, \link{read_comparison_from_file}
}
\author{
Mike Puijk
}
