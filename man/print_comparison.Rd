% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparison.R
\name{print_comparison}
\alias{print_comparison}
\title{Print out a comparison}
\usage{
print_comparison(comparison)
}
\arguments{
\item{comparison}{A \code{comparison} object or any other object that can be
printed out as a \code{data.table} object without further conversions.}
}
\value{
A \code{data.table} object.
}
\description{
Converts objects to a \code{data.table} object and prints it out
}
\details{
The object provided is printed out as if it were \code{data.table} object without
explicitly converting it. As such, this function returns a \code{data.table}
object, not a \code{comparison}.

This function was written to avoid potential errors, as
using the generic print function on a \code{comparison} object can cause an error
if the \code{print.comparison} method from the \code{testthat} package is loaded.
Outside of this situation, printing out a \code{comparison} object as normal
should function properly.
}
\examples{
## Get some values
starts1 <- c(2, 1000, 1050)
ends1 <- c(600, 800, 1345)
starts2 <- c(50, 800, 1200)
ends2 <- c(900, 1100, 1322)

## From a data.frame
comparison1 <- as.comparison(data.frame(start1 = starts1, end1 = ends1,
                                        start2 = starts2, end2 = ends2))
print_comparison(comparison1)

## Printing out a comparison like this can occasionally throw an error:
\dontrun{
comparison1
print(comparison1)}
## This can happen when print.comparison is loaded from the testthat package
## To avoid this, use print_comparison as shown above

}
\seealso{
\link{comparison}
}
\author{
Mike Puijk
}
