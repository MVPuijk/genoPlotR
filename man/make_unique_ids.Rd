% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit_data.R
\name{make_unique_ids}
\alias{make_unique_ids}
\title{Make unique IDs for dna_segs}
\usage{
make_unique_ids(dna_seg_input, old_id = NULL, new_id = "id")
}
\arguments{
\item{dna_seg_input}{Either a single \code{dna_seg} or a list of \code{dna_seg}
objects.}

\item{old_id}{Either a character vector representing \code{dna_seg}
columns, or \code{NULL}. The IDs will be generated based on the vector of
\code{dna_seg} columns provided, or generated from scratch if this argument is
\code{NULL}.}

\item{new_id}{A character string, the generated IDs will be stored in the
\code{dna_seg} column given by this argument. Will create a new column if it does
not exist in the \code{dna_segs}.}
}
\value{
Either a single \code{dna_seg} object or a list of \code{dna_seg} objects,
matching the input given using \code{dna_seg_input}.
}
\description{
Generates unique identifiers (IDs) for each \code{dna_seg} features. They can be
based on the values from existing columns, or generated from scratch.
}
\details{
This function generates unique identifiers for \code{dna_segs}. Having unique
identifiers is necessary for certain other functions, like converting a
\code{dna_seg} into a FASTA file, as most tools that make use of FASTA files
require unique headers for each sequence in the FASTA file.

If \code{old_id} is left as \code{NULL}, the generated IDs are simply row numbers for
each feature. If \code{old_id} refers to one or multiple \code{dna_seg} columns,
then the values of those columns are concatenated, separated by \code{"_"}. Then,
a number is added to these values, which starts at 1 for each combination
of values, and goes up each time the same combination is found. See the
examples below.
}
\examples{
## Prepare dna_seg
names1 <- c("A", "A", "B", "B", "B", "C")
types1 <- c("gene", "gene", "gene", "protein", "gene", "gene")

## Make dna_seg
dna_seg_raw <- dna_seg(data.frame(name = names1,
                                  start = (1:6) * 3,
                                  end = (1:6) * 3 + 2,
                                  strand = rep(1, 6),
                                  type = types1))

## Generate IDs based on 1 column 
dna_seg_edit <- make_unique_ids(dna_seg_input = dna_seg_raw,
                                old_id = "name")
dna_seg_edit[, .(name, type, id)]

## Generate IDs based on multiple columns
dna_seg_edit <- make_unique_ids(dna_seg_input = dna_seg_raw, 
                                old_id = c("name", "type"))
dna_seg_edit[, .(name, type, id)]

}
\seealso{
\link{dna_seg}
}
\author{
Mike Puijk
}
