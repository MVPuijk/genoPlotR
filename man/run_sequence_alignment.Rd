% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alignments.R
\name{run_sequence_alignment}
\alias{run_sequence_alignment}
\alias{run_blast}
\alias{run_diamond}
\title{Perform sequence alignments using DIAMOND or BLAST}
\usage{
run_blast(
  query,
  subject,
  out = NULL,
  tool_path = NULL,
  evalue = "1E-3",
  max_target_seqs = 10000,
  num_threads = 1,
  always_make_db = FALSE,
  verbose = FALSE,
  algorithm = "blastp"
)

run_diamond(
  query,
  subject,
  out = NULL,
  sensitivity = "default",
  iterate = FALSE,
  tool_path = NULL,
  evalue = "1E-3",
  max_target_seqs = 10000,
  num_threads = 1,
  always_make_db = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{query}{Path to a FASTA file containing sequences to query.}

\item{subject}{Path to a FASTA file or database. If a FASTA file is
given, a database will be created first, in the same folder as \code{out}. File
paths to databases should be without the file extension.}

\item{out}{Output file/ folder path. If the path is an existing folder, a
file name will be generated to save the hits to, based on the query
and subject file names.}

\item{tool_path}{Path to the folder containing the blast+ executables.
Only necessary if they are not in the \verb{$PATH} variable.}

\item{evalue}{Expectation value (E) threshold for hits}

\item{max_target_seqs}{The maximum amount of hits per query}

\item{num_threads}{Number of threads (CPUs) to use in the BLAST search}

\item{always_make_db}{Logical. If \code{TRUE}, always treats \code{subject} as
a FASTA file and make a database from it first. If \code{FALSE}, it
will check for the presence of a database first, and only creates one
when necessary.}

\item{verbose}{Logical. If \code{TRUE}, reports timings when
it starts making the subject database and when it executes the actual
DIAMOND/ BLAST command.}

\item{algorithm}{Choice of BLAST algorithm, one of: \code{"blastp"},
\code{"blastp-fast"}, \code{"blastp-short"}, \code{"blastn"}, \code{"blastn-short"},
\code{"megablast"}, \code{"dc-megablast"}, or \code{"tblastx"}}

\item{sensitivity}{Choice of the sensitivity option used by DIAMOND, one of:
\code{"fast"}, \code{"default"}, \code{"mid-sensitive"}, \code{"sensitive"}, \code{"more-sensitive"},
\code{"very-sensitive"}, or \code{"ultra-sensitive"}.}

\item{iterate}{Logical. If \code{TRUE}, DIAMOND will start looking for hits using
the fast sensitivity setting, increasing the sensitivity if no hits are found
until the target sensitivity is reached. Also causes it to stop searching
after the first hit is found for each query.}
}
\value{
Returns nothing (invisible \code{NULL}).
}
\description{
Executes DIAMOND, or a blastn, blastp, or tblastx algorithm.
}
\details{
This function requires that the command-line implementation of the tool of
choice is installed. In the case of BLAST, this is \verb{blast+}. Uses every
sequence in the FASTA file provided by \code{query} as queries, aligning them
against the reference database provided by \code{subject}.

\code{evalue}, \code{max_target_seqs}, and
\code{num_threads} are all directly passed to DIAMOND/ BLAST as arguments. See
their respective documentations for further details.

If out is left as \code{NULL}, the current working directory will be used
instead. The file name will be generated based on the query and subject
file names.
}
\examples{
\dontrun{
## Running BLAST with the blastp algorithm
run_blast(query = "query.fa",
          subject = "subject.fa",
          out = "query_subject",
          algorithm = "blastp",
          tool_path = "path/to/blast/executable")

## Running DIAMOND with the "very-sensitive" option
run_diamond(query = "query.fa",
            subject = "subject.fa",
            out = "query_subject",
            sensitivity = "very-sensitive",
            tool_path = "path/to/diamond/executable")
}

}
\seealso{
\link{dna_seg_to_fasta}, \link{genbank_to_fasta}, \link{comparisons_from_dna_segs}
}
\author{
Mike Puijk
}
