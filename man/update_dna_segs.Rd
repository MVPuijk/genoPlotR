% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit_data.R
\name{update_dna_segs}
\alias{update_dna_segs}
\title{Update dna_segs using comparisons}
\usage{
update_dna_segs(
  dna_seg_input,
  comparison_input,
  seg_id = "locus_id",
  comparison_id = "auto",
  update_region_plot = TRUE,
  color_var = NULL,
  default_color = "grey80",
  update_from_top = TRUE
)
}
\arguments{
\item{dna_seg_input}{Either a single \code{dna_seg} or a list of \code{dna_seg}
objects.}

\item{comparison_input}{Either a single \code{comparison} or a list of
\code{comparison} objects.}

\item{seg_id}{The name of a \code{dna_seg} column, whose values will be used to
make the links to the comparisons.}

\item{comparison_id}{The shared name of the \code{comparison} columns, whose
values will be used to make the links to the \code{dna_segs}. See details.}

\item{update_region_plot}{Logical. If \code{TRUE}, updates the \code{region_plot}
attribute of \code{dna_segs}, which determines whether the neighborhood of these
features is plotted in a regional plot.}

\item{color_var}{The color column to update in the \code{dna_segs}. Must be either
\code{col}, \code{fill}, or left as the default \code{NULL}, which will result in no color
column being updated.}

\item{default_color}{A character string providing the default color of the
comparisons, must be either \code{NULL} or a valid color. The color given by
this argument will be ignored when updating, never overwriting any color
in the \code{dna_segs}.}

\item{update_from_top}{Logical. If \code{TRUE}, updates the \code{dna_segs} with
the comparisons above them in the plotting order. Setting this to \code{FALSE}
will make it update the \code{dna_segs} using the comparisons below them in the
plotting order, but this also means that the \code{dna_segs} and \code{comparisons}
need to be provided in reverse plotting order. Therefore, this is recommended
to be used only when providing a single \code{dna_seg} and \code{comparison}.}
}
\value{
Either a single \code{dna_seg} object or a list of \code{dna_seg} objects,
matching the input given using \code{dna_seg_input}.
}
\description{
A \code{dna_seg} or list of \code{dna_segs} is updated using a matching list of
comparisons. This can be used to update the \code{region_plot} or color attributes
of \code{dna_seg} features, by linking them with comparisons.
}
\details{
If \code{dna_seg_input} is a single \code{dna_seg}, it will be updated using the first
(or only) \code{comparison} from \code{comparison_input}.

When updating colors, the colors will be taken from the \code{col} column from
the \code{comparison} objects, regardless of whether the \code{col} or \code{fill}
column is updated in the \code{dna_segs}, because the \code{fill} column is absent
in \code{comparison} objects.

The objects are linked together through shared
values. The columns for these shared values are determined by the \code{seg_id}
and \code{comparison_id} arguments, for the \code{dna_segs} and comparisons,
respectively. \code{comparison_id} refers to 2 columns, and defaults to \code{"auto"},
which will attempt to determine which columns to use automatically.
If for example, \code{comparison_id} is set as \code{"name"}, it will look for the
\code{"name1"} and \code{"name2"} columns to match to the \code{seg_id} in the \code{dna_segs}
above, and under it, respectively.

When \code{update_from_top} is \code{TRUE}, it assumes the list of \code{dna_segs} and
comparisons are in plotting order. The first \code{dna_seg} will not be updated
as there is no \code{comparison} above it to update it with. If instead
\code{update_from_top} is \code{FALSE}, the \code{dna_segs} and comparisons would have to
be supplied in reverse plot order, which is why this is not recommended.
In this case the last \code{dna_seg} in plot order will not be updated, as there
was no \code{comparison} below it to update it with.
}
\examples{
## Prepare dna_seg
names1 <- c("1A", "1B", "1C")
names2 <- c("2A", "2C", "2B")
names3 <- c("3B", "3A", "3C")

## Make dna_segs
dna_seg1 <- dna_seg(data.frame(name = names1,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3)))
dna_seg2 <- dna_seg(data.frame(name = names2,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3)))
dna_seg3 <- dna_seg(data.frame(name = names3,
                               start = (1:3) * 3,
                               end = (1:3) * 3 + 2,
                               strand = rep(1, 3),
                               fill = c("grey80", "grey80", "green")))
dna_segs <- list("Genome 1" = dna_seg1,
                 "Genome 2" = dna_seg2,
                 "Genome 3" = dna_seg3)

## Make comparisons
comp1 <- comparison(data.frame(start1 = c(3, 6, 9), end1 = c(5, 8, 11),
                               start2 = c(3, 9, 6), end2 = c(5, 11, 8),
                               name1 = c("1A", "1B", "1C"),
                               name2 = c("2A", "2B", "2C"),
                               col = c("red", "blue", "grey80"),
                               direction = c(1, 1, 1)))
comp2 <- comparison(data.frame(start1 = c(3, 9, 6), end1 = c(5, 11, 8),
                               start2 = c(6, 3, 9), end2 = c(8, 5, 11),
                               name1 = c("2A", "2B", "2C"),
                               name2 = c("3A", "3B", "3C"),
                               col = c("red", "blue", "grey80"),
                               direction = c(1, 1, 1)))

## Before using update_dna_segs
plot_gene_map(dna_segs = dna_segs, 
              comparisons = list(comp1, comp2),
              alpha_comparisons = 0.6)

## Apply update_dna_segs to update the colors
dna_segs <- update_dna_segs(dna_seg_input = dna_segs,
                            comparison_input = list(comp1, comp2),
                            seg_id = "name",
                            update_region_plot = FALSE,
                            color_var = "fill",
                            default_color = "grey80")

## After using update_dna_segs
## Because default_color was "grey80", that color will not overwrite dna_segs
plot_gene_map(dna_segs = dna_segs, 
              comparisons = list(comp1, comp2),
              alpha_comparisons = 0.6)

}
\seealso{
\link{update_comparisons}, \link{sequential_updates}, \link{dna_seg}, \link{comparison}
}
\author{
Mike Puijk
}
